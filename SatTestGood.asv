clear;
startTime = datetime(2023,7,11,16,40,0);              
stopTime = startTime + hours(18);                       
sampleTime = 120;                                      % seconds
TargetSat = 3;  
sc = satelliteScenario(startTime,stopTime,sampleTime);
satelliteScenarioViewer(sc);

%tleFile = "leoSatelliteConstellation.tle"; 
tleFile = 'threeSatelliteConstellationE.tle';

sat = satellite(sc,tleFile);

for i = 1:length(sat)
    gimbalSatRx(i) =  gimbal(sat(i),"MountingLocation",[0;-1;2]);
    gimbalSatTx(i) = gimbal(sat(i), "MountingLocation",[0;1;2]);  % meters
    satRx(i) = receiver(gimbalSatRx(i), ...
    "MountingLocation",[0;0;1], ...      % meters
    "GainToNoiseTemperatureRatio",3, ... % decibels/Kelvin
    "RequiredEbNo",4);                   % decibels
    gaussianAntenna(satRx(i), ...
    "DishDiameter",0.5);    % meters
    satTx(i) = transmitter(gimbalSatTx(i), ...
    "MountingLocation",[0;0;1], ...   % meters
    "Frequency",30e9, ...             % hertz
    "Power",15);                      % decibel watts
    gaussianAntenna(satTx(i), ...
    "DishDiameter",0.5);    % meters
end


latitude = -33.7974039;        % degrees
longitude = 151.1768208;       % degrees
gs1 = groundStation(sc, ...
    latitude, ...
    longitude, ...
    "Name","Ground Station");

gimbalGs1 = gimbal(gs1, ...
    "MountingAngles",[0;180;0], ... % degrees
    "MountingLocation",[0;0;-5]);   % meters

gs1Tx = transmitter(gimbalGs1, ...
    "Name","Ground Station 1 Transmitter", ...
    "MountingLocation",[0;0;1], ...           % meters
    "Frequency",2.1e9, ...                     % hertz
    "Power",36);                              % decibel watts

gaussianAntenna(gs1Tx, ...
    "DishDiameter",2.4); % meters

%     ac = access(sat(1),gs1);
%     intvls = accessIntervals(ac)

totalNodes = length(sat)+1;
satAcc= zeros(totalNodes);

totalTime = seconds(stopTime - startTime)/sampleTime;
time = startTime;

connectArray(1:totalTime) = 0;

satAccTime(1:4,1:4,1:totalTime) = 0;

%GS to each sat connections 
acObj = access(gs1, sat(1:end));
ac_matrix(:,:,1) = acObj;

%Sat to Sat connections
for i = 1:length(sat)
    acObj = access(sat(i),sat(1:end));
    ac_matrix(:,:,i+1) = acObj;
end

for timeInc = 1:totalTime
    
    %For each timeInc, get adjacency vector for GS to Sats
    satAcc(1, 2:end) = accessStatus(ac_matrix(:,:,1), time);
    %adjacency Matrix is diagonally symetical 
    satAcc(2:end, 1) = satAcc(1, 2:end);

    %Build matrix with inter-sat connections
    for i = 2:length(totalNodes)
        satAcc(2:end, i) = accessStatus(ac_matrix(:,:,i, time));
    end    

    %Build graph to check connections from Matrix
    G = graph(satAcc);
    comp = conncomp(G);
  

    if comp(1) == comp(3)
        connectArray(timeInc) = 1;
    end

    %satAccTime(:,:,timeInc) = satAcc;
    time = time + seconds(sampleTime)
end

figure
heatmap(connectArray);

% G = graph(satAcc);
figure
plot(G)

%eventTable2Chart(intvls,startTime, stopTime, sampleTime)


%s = accessStatus(ac,time)

% pointAt(gimbalGs1,sat1);
% pointAt(gimbalSat1Rx,gs1);
% 
% lnk(1) = link(gs1Tx,sat1Rx);
% linkIntervals(lnk(1))
% 
% figure
% [e, time] = ebno(lnk(1));
% margin(1,:) = e - sat1Rx.RequiredEbNo;
% plot(time,margin,"LineWidth",2);
% xlabel("Time");
% ylabel("Link Margin (dB)");
% grid on;
% 
% pointAt(gimbalGs1,sat2);
% pointAt(gimbalSat2Rx,gs1);
% pointAt(gimbalSat2Tx,sat1);
% pointAt(gimbalSat1Rx,sat2);
% 
% lnk(2) = link(gs1Tx,sat2Rx, sat2Tx, sat1Rx);
% linkIntervals(lnk(2))
% 
% [e, time] = ebno(lnk(2));
% margin(2,:) = e - sat2Rx.RequiredEbNo;
% 
% 
% 
% pointAt(gimbalGs1,sat3);
% pointAt(gimbalSat3Rx,gs1);
% pointAt(gimbalSat3Tx,sat1);
% pointAt(gimbalSat1Rx,sat3);
% 
% lnk(3) = link(gs1Tx,sat3Rx, sat3Tx, sat1Rx);
% %lnk(3) = link(sat3Tx, sat1Rx);
% linkIntervals(lnk(3))
% 
% [e, time] = ebno(lnk(3));
% margin(3,:) = e - sat3Rx.RequiredEbNo;
% 
% pointAt(gimbalGs1,sat3);
% pointAt(gimbalSat3Rx,gs1);
% pointAt(gimbalSat3Tx,sat2);
% pointAt(gimbalSat2Rx,sat3);
% pointAt(gimbalSat2Tx,sat1);
% pointAt(gimbalSat1Rx,sat2);
% 
% lnk(4) = link(gs1Tx,sat3Rx, sat3Tx, sat2Rx, sat2Tx, sat1Rx);
% linkIntervals(lnk(4))
% 
% [e, time] = ebno(lnk(4));
% margin(4,:) = e - sat1Rx.RequiredEbNo;
% 
% pointAt(gimbalGs1,sat2);
% pointAt(gimbalSat2Rx,gs1);
% pointAt(gimbalSat2Tx,sat3);
% pointAt(gimbalSat3Rx,sat2);
% pointAt(gimbalSat3Tx,sat1);
% pointAt(gimbalSat1Rx,sat3);
% 
% lnk(5) = link(gs1Tx,sat2Rx, sat2Tx, sat3Rx, sat3Tx, sat1Rx);
% linkIntervals(lnk(5))
% 
% [e, time] = ebno(lnk(5));
% margin(5,:) = e - sat1Rx.RequiredEbNo;
% 
% figure
% subplot(1,2,1);
% plot(time,margin,"LineWidth",2);
% xlabel("Time");
% ylabel("Link Margin (dB)");
% grid on;
% legend({'Direct to Sat1','via Sat2','via Sat3', 'via Sat3 then sat2','via Sat2 then sat3'})
% 
% %margin(margin < -10e6) = 0;
% 
% marginSumInt1 = max(margin(1,:),margin(2,:));
% marginSumInt2 = max(marginSumInt1,margin(3,:));
% marginSumInt3 = max(marginSumInt2,margin(4,:));
% marginSum = max(marginSumInt3,margin(5,:));
% %eSum = e(1) + e(2) + e(3) + e(4) + e(5);
% % %lnk = lnk1 + lnk2 + lnk3 + lnk4 + lnk5;
% % 
% marginSum(marginSum <= 0) = -inf;
% subplot(1,2,2);
% plot(time,marginSum,"LineWidth",2);
% xlabel("Time");
% ylabel("Link Margin (dB)");
% grid on;
